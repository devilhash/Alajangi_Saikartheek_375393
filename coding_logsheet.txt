7/1/2024(Sunday)
Coding 5 : Number of laser beams in a bank
class Solution {
    public int numberOfBeams(String[] bank) {
         int[] arr = new int[bank.length];
         for(int i = 0 ; i < bank.length;i++){
             int count = 0;
             for(int j = 0 ; j < bank[i].length() ; j++){
                 if(bank[i].charAt(j)=='1'){
                     count++;
                 }
             }
             arr[i] = count;
         }
         int current = 0;
         int prev = 0;
         int res = 0;
         for(int i = 0 ; i < arr.length ; i++){
             current = arr[i];
             res += current*prev;
             prev = current==0?prev:current;
         }
         return res;
         
    }
}



6/1/2024(Saturday)
Coding 5 :Given a String s, find the length of the longest substring without repeating characters
class Solution {
    public int lengthOfLongestSubstring(String s) {
        Set<Character> set = new HashSet();
        int left = 0;
        int maxlength = 0;
        for(int right = 0 ; right < s.length() ; right++){
            if(!set.contains(s.charAt(right))){
                set.add(s.charAt(right));
                maxlength =  Math.max(maxlength,right-left+1);
            }
            else{
                while(s.charAt(left)!= s.charAt(right)){
                    set.remove(s.charAt(left));
                    left++;
                }
                set.remove(s.charAt(left));
                left++;
                set.add(s.charAt(right));
            }
        }
        
 return maxlength;
}
}.
5/1/2024(Friday)
Coding 4 : Pascal pyramid
import java.util.Scanner;
public class PascalPyramid {

	public static void main(String[] args) {
		 Scanner sc = new Scanner(System.in);
		 System.out.println("Enter the level of the pyramid :");
		 int n = sc.nextInt();
		 pascalPyramid(n);
		 

	}

	private static void pascalPyramid(int n) {
		int[] res;
		if(n==0) {
		 res = new int[1];
		}
		else {
			  res = new int[n+1];
		}
		for(int i = 0 ; i <= n ; i++) {
			res[i]= ncr(n,i);
		}
		for(int i : res) {
			System.out.print(i+" ");
		}
		 
	}

	private static int ncr(int n, int i) {
		 return (factorial(n))/(factorial(i)*factorial(n-i));
	}

	private static int factorial(int n) {
		 if(n==0||n==1)
			 return 1;
		 return n*factorial(n-1);
	}

}


Coding 3 :Container with Most Water
 class Solution {
    public int maxArea(int[] height) {
        int left = 0 ;
        int right = height.length-1;
        int maxArea = 0;
        while(left<right){
            int area = Math.min(height[left],height[right])*(right-left);
            maxArea = Math.max(area,maxArea);

            if(height[left]<height[right]){
                left++;
            }
            else{
                right--;
            }
        }
         return maxArea;
    }
}


Coding 2 :Roman TO Integers

class Solution {
    public int romanToInt(String s) {
     int [] intArr =  new int[s.length()];
               for(int i = 0 ; i < s.length() ; i++){
                   if(s.charAt(i)=='I'){
                       intArr[i] = 1;
                   }
                   else if(s.charAt(i)=='V'){
                       intArr[i] = 5;
                   }
                   else if(s.charAt(i)=='X'){
                       intArr[i] = 10;
                   }
                   else if(s.charAt(i)=='L'){
                       intArr[i] = 50;
                   }
                   else if(s.charAt(i)=='C'){
                       intArr[i] = 100;
                   }
                   else if(s.charAt(i)=='D'){
                       intArr[i] = 500;
                   }
                   else if(s.charAt(i)=='M'){
                       intArr[i] = 1000;
                   }
                   else{
                       System.out.println("Enter a valid Roman Character");
                   }
               }
               int res = intArr[intArr.length-1];
               for(int i = intArr.length-2; i >= 0 ; i--){
                   if( intArr[i] >= intArr[i+1] ){
                     res += intArr[i];
                       
                           
                     }
                    else if( intArr[i] < intArr[i+1] ){
                     res = res - intArr[i];
                     }
                     else{
                         
                           System.out.println("not valid");
                           
                        }
               }
               return res;
        
    }
}
Coding 1 : Palindrome Number or Not


    class Solution {
    public boolean isPalindrome(int x) {
        if(x < 0 ){
            return false;
        }
        int res = 0;
        int org = x;
        while(x!=0){
            int rem = x%10;
            res  = res*10+rem;
            x = x/10;
        }
         System.out.println(res);
        if(org == res){
            return true;
        }
        else{
            return false;
        }
        
        
    }
}
